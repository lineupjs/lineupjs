name: Release Main

on:
  push:
    branches:
      - main

jobs:
  correct_repository:
    runs-on: ubuntu-latest
    steps:
      - name: fail on fork
        if: github.repository_owner != 'lineupjs'
        run: exit 1

  create_release:
    needs: correct_repository
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Extract version
        id: extract_version
        run: |
          node -pe "'::set-output name=version::' + require('./package.json').version"
          node -pe "'::set-output name=npm_tag::' + (require('./package.json').version.includes('-') ? 'next' : 'latest')"
      - name: Print version
        run: |
          echo "releasing ${{ steps.extract_version.outputs.version }} with tag ${{ steps.extract_version.outputs.npm_tag }}"
      - name: Create Release
        id: create_release
        uses: release-drafter/release-drafter@v6
        env:
          GITHUB_TOKEN: ${{ secrets.PRIVATE_GITHUB_TOKEN }}
        with:
          name: v${{ steps.extract_version.outputs.version }}
          tag: v${{ steps.extract_version.outputs.version }}
          version: ${{ steps.extract_version.outputs.version }}
          prerelease: ${{ needs.create_release.outputs.tag_name == 'next' }}
          publish: true
    outputs:
      version: ${{ steps.extract_version.outputs.version }}
      npm_tag: ${{ steps.extract_version.outputs.npm_tag }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      tag_name: ${{ steps.create_release.outputs.tag_name }}

  npm_publish:
    needs: create_release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm i -g yarn
      - run: yarn config set checksumBehavior ignore
      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: |
            ./.yarn/cache
            ./.yarn/unplugged
            ~/.cache/Cypress
          key: ${{ runner.os }}-yarn2-v4-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn2-v4
      - run: yarn install
      - run: yarn clean
      - run: yarn compile
      - run: yarn build
      - run: yarn lint
      - run: yarn test:coverage
      - run: yarn cy:compile
      - run: yarn cy:junit
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-artifacts
          path: |
            cypress/screenshots
            cypress/videos

      - run: yarn docs
      - run: |
          mkdir -p public/main
          cp -rt public/main/ docs demo/* build/*
          mkdir -p public/app
          cp -rt public/app/ build/LineUpJS.* build/*.ttf

      - name: Deploy Main
        uses: upsetjs/actions-gh-pages@sgratzl
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        with:
          personal_token: ${{ secrets.PRIVATE_GITHUB_TOKEN }}
          external_repository: lineupjs/lineup.js.org
          publish_branch: main
          publish_dir: ./public
          enable_jekyll: true
          remove_path_spec: 'main,app/LineUpJS.*,app/*.ttf'
      - name: Pack Publish
        run: |
          yarn config set npmAuthToken "${{ secrets.NPM_TOKEN }}"
          yarn pack
          yarn npm publish --tag "${{ needs.create_release.outputs.npm_tag }}"
      # - name: Upload Release Asset
      #   uses: AButler/upload-release-assets@v2
      #   with:
      #     files: '*.tgz'
      #     repo-token: ${{ secrets.PRIVATE_GITHUB_TOKEN }}
      #     release-tag: ${{ needs.create_release.outputs.tag_name }}

  sync_dev:
    needs: correct_repository
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          ref: develop
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Reset dev branch
        run: |
          git fetch origin main:main
          git merge main
          git push
