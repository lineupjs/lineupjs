@use '../vars';
@use '@fortawesome/fontawesome-free/scss/mixins' as *;
@use 'font_awesome' as *;

$lu_icon_check_square_o: '\f14a';
$lu_icon_caret_down: '\f0d7';
$lu_icon_caret_right: '\f0da';
$lu_icon_exclamation_triangle: '\f071';
$lu_icon_check: '\f00c';
$lu_icon_expand: '\f065';
$lu_icon_compress: '\f066';
$lu_icon_search: '\f002';
$lu_icon_scissors: '\f0c4';
$lu_icon_gears: '\f085';
$lu_icon_pencil_square_o: '\f044';
$lu_icon_undo: '\f0e2';
$lu_icon_times: '\f00d';

// custom
$lu_icon_type_ordinal: '\e80e';
$lu_icon_type_matrix: '\e80b';
$lu_icon_type_string: '\e80d';
$lu_icon_type_categorical: '\e810';
$lu_icon_type_numerical: '\e80f';
$lu_icon_type_date: '\e812';
$lu_icon_type_composite: '\e813';
$lu_icon_type_map: '\e811';
$lu_icon_slope_item: '\e815';
$lu_icon_slope_band: '\e814';
$lu_icon_logo: '\e816';

$lu_icon_left_dir: '\f053';
$lu_icon_up_dir: '\e819';
$lu_icon_down_open: '\f078';
$lu_icon_left_open: '\e81b';
$lu_icon_right_open: '\f053';
$lu_icon_up_open: '\f077';
$lu_icon_lock: '\f023';
$lu_icon_lock_open: '\f3c1';
$lu_icon_star: '\f005';
$lu_icon_star_empty: '\e801';
$lu_icon_star_half: '\f089';
$lu_icon_star_half_alt: '\f5c0';
$lu_icon_lock_open_alt: '\f13e';

$lu_icon_external_link: '\f35d';
$lu_icon_square_o: '\f0c8';
$lu_icon_tasks: '\f0ae';
$lu_icon_filter: '\f0b0';
$lu_icon_bars: '\f0c9';
$lu_icon_columns: '\f0db';
$lu_icon_sort: '\f0dc';
$lu_icon_sort_desc: '\f0dd';
$lu_icon_sort_asc: '\f0de';
$lu_icon_sitemap: '\f0e8';
$lu_icon_exchange: '\f362';
$lu_icon_code_fork: '\f126';
$lu_icon_ellipsis_h: '\f141';
$lu_icon_toggle_right: '\f152';
$lu_icon_sort_alpha_asc: '\f15d';
$lu_icon_sort_alpha_desc: '\f15e';
$lu_icon_sort_amount_asc: '\f160';
$lu_icon_sort_amount_desc: '\f161';
$lu_icon_sort_numeric_asc: '\f162';
$lu_icon_sort_numeric_desc: '\f163';
$lu_icon_toggle_left: '\f191';
$lu_icon_sliders: '\f1de';
$lu_icon_trash: '\f2ed';
$lu_icon_brush: '\f1fc';
$lu_icon_chrome: '\f268';
$lu_icon_firefox: '\f269';
$lu_icon_edge: '\f282';
$lu_icon_window_restore: '\f2d2';

@mixin lu_icons() {
  @if vars.$lu_use_font_awesome == true {
    @include fa-icon();

    font-family: $fa-style-family, serif;
    font-weight: $fa-style;
  } @else {
    display: inline-block;
    font:
      normal normal normal 14px/1 lu-font,
      serif; // shortening font declaration

    font-size: inherit; // can't have font-size inherit on line above, so need to override
    text-rendering: auto; // optimizelegibility throws things off #1094
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
}

@mixin lu_icons_o() {
  @include lu_icons();
  @if vars.$lu_use_font_awesome == true {
    font-weight: 400;
  }
}

@mixin lu_custom_icons() {
  @if vars.$lu_use_font_awesome == true {
    content: '\2003';
    display: inline;
    width: 1em;
    background-position: left center;
    background-repeat: no-repeat;
    background-size: 75%;
    filter: contrast(0);
  } @else {
    @include lu_icons();
  }
}

@mixin lu_custom_icon($icon, $name) {
  @if vars.$lu_use_font_awesome == true {
    background-image: url('#{vars.$lu_assets}/icon_#{$name}.svg');
  } @else {
    content: $icon;
  }
}

@if vars.$lu_use_font_awesome == true {
  @include lu_fontawesome_var_icons();
}
